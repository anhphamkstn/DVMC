<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_cmd_chinh_sua_don_hang.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>